---
title: "`nycflights13` 보고서"
title-slide-attributes:
    data-background-image: airport.jpg
    data-background-size: cover
    data-background-opacity: "0.5"
subtitle: "가장 바쁜 뉴욕시 공항은 어디?"
author: "00조"
format: 
    revealjs:
        logo: LS-cap-Logo.png
        theme: [default, custom.scss]
        reference-location: document
        footer: "LS빅데이터스쿨"
---

# 뉴욕 비행장 데이터를 알아보자!

## 기본 정보 {footer=false}

-   다음과 같이 비행장 데이터 `flights`를 불러오도록 하겠습니다.

```{python}
import numpy as np
import pandas as pd
from nycflights13 import flights, planes

flights.info()
planes.info()
```


---

대쉬 3개(`---`)를 사용하면 다음 페이지 생성됨.

### 차례로 보여지게 만들기

`::: {.incremental}`로 쌓여진 다음과 같은 아이템의 경우 차례로 보여지게 됩니다.

::: incremental
-   1번 아이템
-   2번 아이템
-   3번 아이템
:::

---

## 제목

::::: columns
::: {.column width="50%"}
이부분은 40%를 차지하고,
:::

::: {.column width="50%"}
오른쪽은 60% 너비를 차지하도록 설정
:::
:::::

## 내용 작게 만들기 {.smaller}

오른쪽은 60% 너비를 차지하도록 설정

::: {.notes}
말할 내용을 적어봅시다.
:::

## 스크롤 가능하게 만들기 {.scrollable}

* 아이템들
* 아이템들
* 아이템들
* 아이템들
* 아이템들
* 아이템들
* 아이템들
* 아이템들
* 아이템들
* 아이템들
* 아이템들

## Aside / Footnote 효과 테스트

다음은 특정 비행장^[애틀랜타 비행장] 관련 데이터 입니다.

::: aside
뉴욕시에는 3개의 비행장이 있음.
:::


## 코드 하이라이팅


::::: columns
::: {.column width="50%"}

```{.python code-line-numbers="|6|8"}
import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
    subplot_kw={'projection': 'polar'}
    )
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

:::

::: {.column width="50%"}

오른쪽 결과물

:::
:::::


## 인터렉티브 시각화

코드와 결과 배치 방법 결정 가능

```{python}
#| echo: true
#| output-location: column
import plotly.express as px

fig = px.scatter(
    x=flights["dep_delay"].head(), 
    y=flights["arr_delay"].head())
fig.show()
```


---

::: {.panel-tabset}

### Tab A

Content for `Tab A`

### Tab B

Content for `Tab B`

:::

---

## 새로운 페이지 {background-color="green"}

::: {.panel-sidebar}

### 사이드바 제목

왼쪽 공간

:::

::: {.panel-center}

오른쪽 공간

:::